#!/usr/bin/env python3

import sys

def operations(i, m, g):
    x_i = 1
    res = [0] * (len(sys.argv) - 1)
    a = 0
    d = 0
    z = m - 1
    for f in range(0, m):
        e = 0
        for elem in g[f]:
            r = g[f][e]
            e += 1
            res[d] += (int(r) * x_i)
            x_i *= i
        d += 1
    y = [0] * (len(sys.argv) - 1)
    for q in range(0, m):
        y[a] = g[q][m - 1]
        a += 1
    for b in range(0, m):
        for z in range(m - 1, 0):
            y[a] *= i + g[b][z]
            z -= 1
        a += 1
    return(y)


def sep_nbr():
    m = 0
    g = [0] * len(sys.argv)
    for t in range(1, len(sys.argv)):
        g[m] = sys.argv[t].split('*')
        m += 1
    for i in range(0, 1001):
        y = operations(i, m, g)
        print('%.3f' % (i / 1000), '->', '%.6f' % (float(y[0]) / float(y[1])))

def error():
    if len(sys.argv) == 1:
        exit (84)
    if sys.argv[1] == "-h" and len(sys.argv) == 2:
        usage()
    if len(sys.argv) % 2 != 1:
        exit (84)
    for z in range(1, len(sys.argv)):
        for i in range(0, len(sys.argv[z])):
            if ((sys.argv[z][i] < '/' or sys.argv[z][i] > ':') and sys.argv[z][i] != '*'):
                exit(84)

def usage():
    print('USAGE\n\t./107tranfer [num den]*')
    print('DESCRIPTION')
    print('\tnum\tpolynomial numerator defined by its coefficients')
    print('\tden\tpolynomial denominator defined by its coefficients')
    exit (0)

if __name__ == '__main__':
    error()
    sep_nbr()

# "1*2*3*6" "1*4*6" "2*5*4" "1"

# 0.000 -> (6x(0.000)^4 + 3 x 0.000^3 + 1 x 0) / 6x0.000^3
# 0.001
# 0.002
# 1.000


# "1*2*3*4" "1"
#   0.001 -> 1x0.001^0 + 2*0.001^1 + ... /  1 * 0.001^0
#
#
#
