#!/usr/bin/env python3

import sys

def operations(c, g):
    x_i = 1
    for i in range(0, 1001):
    for f in range(0, c):
        res += (g[f] * x_i)
        x_i
        DESCRIPTION
        print('%.3f' % (i / 1000), '-> ', '%.6f' % (int(sys.argv[t].split('*')) * ))
        i += 1

def sep_nbr():
    c = 0
    for t in range(1, len(sys.argv)):
        for y in range(0, len(sys.argv[t])):
            if (sys.argv[t][y] == '*'):
                c += 1
            g[c] = sys.argv[t].split('*')
        operations(c, g)
        c = 0
    #operations(r, n)
    #if (sys.argv[t] == <= '0')

def error():
    if len(sys.argv) == 1:
        exit (84)
    if sys.argv[1] == "-h" and len(sys.argv) == 2:
        usage()
    if len(sys.argv) % 2 != 1:
        exit (84)
    for z in range(1, len(sys.argv)):
        for i in range(0, len(sys.argv[z])):
            if ((sys.argv[z][i] < '/' or sys.argv[z][i] > ':') and sys.argv[z][i] != '*'):
                exit(84)

def usage():
    print('USAGE\n\t./107tranfer [num den]*')
    print('DESCRIPTION')
    print('\tnum\tpolynomial numerator defined by its coefficients')
    print('\tden\tpolynomial denominator defined by its coefficients')
    exit (0)

if __name__ == '__main__':
    error()
    sep_nbr()

# "1*2*3*6" "1*4*6" "2*5*4" "1"

# 0.000 -> (6x(0.000)^4 + 3 x 0.000^3 + 1 x 0) / 6x0.000^3
# 0.001
# 0.002
# 1.000


# "1*2*3*4" "1"
#   0.001 -> 1x0.001^0 + 2*0.001^1 + ... /  1 * 0.001^0
#
#
#
